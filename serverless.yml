# serverless.yml

service: my-python-application

provider:
  name: aws
  runtime: python3.7
  stage: dev
  region: us-east-2
  environment:
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:*"

functions:
  home:
    handler: index.home_handler
    events:
      - http:
          path: home
          method: get
          integration: lambda
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
  sessionExpired:
    handler: index.session_expired_handler
    events:
      - http:
          path: session-expired
          method: get
          integration: lambda
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
  signIn:
    handler: index.sign_in_handler
    events:
      - http:
          path: sign-in
          method: get
          integration: lambda
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
      - http:
         path: sign-in
         method: post
         integration: lambda
         cors: true
         response:
           headers:
             Set-Cookie: integration.response.body.cookie
  signUp:
    handler: index.sign_up_handler
    events:
      - http:
          path: sign-up
          method: get
          integration: lambda
          response:
            headers:
              Content-Type: "'text/html'"
            template: $input.path('$')
      - http:
          path: sign-up
          method: post
          integration: lambda
          cors: true
          response:
            headers:
              Set-Cookie: integration.response.body.cookie


resources:
  Resources:
    usersTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: username
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: usersTable
        GlobalSecondaryIndexes:
        - IndexName: userName
          KeySchema:
          - AttributeName: username
            KeyType: HASH
          Projection:
            ProjectionType: KEYS_ONLY
          ProvisionedThroughput:
            ReadCapacityUnits: 1
            WriteCapacityUnits: 1
